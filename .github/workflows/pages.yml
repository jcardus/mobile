name: Deploy to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["web"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  #adminfleet
  MAPBOX_TOKEN: pk.eyJ1IjoiYWRtaW5mbGVldCIsImEiOiJjazhqenY4anEwYWtmM3FuYWloaWE1OGpmIn0.fvbvNQ_5sX7AP8QvNR7blQ
  USER_POOL_ID: eu-west-3_3zjuFkIv8
  AUTH_DOMAIN: fleetmap.auth.eu-west-3.amazoncognito.com
  COGNITO_CLIENT_ID: 2ml2d0h1qk7q614qc3bclg2alj
  SENTRY_DSN: https://d1d2bb4b0ffe344ee506b6403dcdd7de@o4507090621956096.ingest.de.sentry.io/4507090623594576
  SENTRY_AUTH_TOKEN: ${{secrets.SENTRY_AUTH_TOKEN}}
  SENTRY_ORG: mobile-dfq



jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v4
        with:
          node-version: '16'
          cache: 'npm'
      - name: install with fontawesome
        run: |
          npm config set "@fortawesome:registry" https://npm.fontawesome.com/
          npm config set "//npm.fontawesome.com/:_authToken" ${{ secrets.FONTAWESOME_NPM_AUTH_TOKEN }}
          npm install
          npm run-script build
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./dist

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
