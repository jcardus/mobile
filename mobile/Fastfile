default_platform(:android)

platform :android do
  desc "Runs all the tests"
  lane :build do
    gradle(task: "build")
  end

  lane :beta do
    android_get_version_name(
        gradle_file: "app/build.gradle" # optional
      )

      android_set_version_name(
        version_name: ENV["VERSION_NAME"],
        gradle_file: "app/build.gradle" # optional
      )

      android_get_version_code(
        gradle_file: "app/build.gradle" # optional
      )

      android_set_version_code(
        version_code: ENV["VERSION_CODE"],
        gradle_file: "app/build.gradle" # optional
      )
    gradle(
      task: 'bundle',
      build_type: 'Release',
      properties: {
                  "android.injected.signing.store.file" => "/etc/keystore",
                  "android.injected.signing.store.password" => "password",
                  "android.injected.signing.key.alias" => "key0",
                  "android.injected.signing.key.password" => "password",
                }
    )
    upload_to_play_store(track: 'internal')
  end

  lane :device_farm do
    gradle(
          task: 'assemble',
          build_type: 'Release'
        )
  end

  desc "Deploy a new version to the Google Play"
  lane :deploy do
  android_get_version_name(
          gradle_file: "app/build.gradle" # optional
        )

        android_set_version_name(
          version_name: ENV["VERSION_NAME"],
          gradle_file: "app/build.gradle" # optional
        )

        android_get_version_code(
          gradle_file: "app/build.gradle" # optional
        )

        android_set_version_code(
          version_code: ENV["VERSION_CODE"],
          gradle_file: "app/build.gradle" # optional
        )
    gradle(
        task: 'bundle',
        build_type: 'Release',
        properties: {
            "android.injected.signing.store.file" => "/Users/Shared/keystore",
            "android.injected.signing.store.password" => "password",
            "android.injected.signing.key.alias" => "key0",
            "android.injected.signing.key.password" => "password",
          }
      )
    upload_to_play_store(skip_upload_apk: true)
  end
end

platform :ios do
  desc "Push a new beta build to TestFlight"

  lane :beta do
    update_code_signing_settings(
      use_automatic_signing: false
    )
    #get_certificates
    #get_provisioning_profile   # invokes sigh
    update_project_provisioning(
        xcodeproj: "App.xcodeproj",
        build_configuration: "Release"
      )
      update_project_team(
        path: "App.xcodeproj",
        teamid: "57X9MD32BX"
      )
    increment_version_number_in_plist(
      version_number: ENV["PACKAGE_VERSION"]
    )
    build_app(workspace: "App.xcworkspace", scheme: "App")
    #upload_to_testflight
  end

  lane :release do
    increment_version_number_in_xcodeproj(xcodeproj: "App.xcodeproj")
    increment_build_number(build_number: app_store_build_number + 1, xcodeproj: "App.xcodeproj")
    get_certificates           # invokes cert
    get_provisioning_profile   # invokes sigh
    build_app(workspace: "App.xcworkspace", scheme: "App")
    upload_to_app_store  # upload your app to App Store Connect
  end

end

