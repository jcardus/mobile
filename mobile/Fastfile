default_platform(:android)

platform :android do
  desc "Runs all the tests"
  lane :build do
    gradle(task: "build")
  end

  lane :beta do
    android_get_version_name(
        gradle_file: "app/build.gradle" # optional
      )

      android_set_version_name(
        version_name: ENV["VERSION_NAME"],
        gradle_file: "app/build.gradle" # optional
      )

      android_get_version_code(
        gradle_file: "app/build.gradle" # optional
      )

      android_set_version_code(
        version_code: ENV["VERSION_CODE"],
        gradle_file: "app/build.gradle" # optional
      )
    gradle(
      task: 'bundle',
      build_type: 'Release',
      properties: {
                  "android.injected.signing.store.file" => "/home/runner/keystore",
                  "android.injected.signing.store.password" => "password",
                  "android.injected.signing.key.alias" => "key0",
                  "android.injected.signing.key.password" => "password",
                }
    )
    upload_to_play_store(track: 'internal')
  end

  lane :device_farm do
    gradle(
          task: 'assemble',
          build_type: 'Release'
        )
  end
end

platform :ios do
  ENV['ITMSTRANSPORTER_FORCE_ITMS_PACKAGE_UPLOAD'] = 'false'

  desc "Push a new beta build to TestFlight"
  lane :beta do
    setup_ci if ENV['CI']
    match(type: 'appstore')
    update_code_signing_settings(
      code_sign_identity: "iPhone Distribution",
      profile_name: ENV['PROFILE_NAME']
    )
    update_project_team(path: "App.xcodeproj", teamid: "57X9MD32BX")
    increment_version_number_in_plist(version_number: ENV["PACKAGE_VERSION"])
    build_app
    api_key = app_store_connect_api_key
    upload_to_testflight(api_key: api_key)
  end

  lane :add_domain_to_entitlement do
          require 'xcodeproj'
          proj = Xcodeproj::Project.open('../App.xcodeproj')

          proj.build_configurations.each do |config|
              config.build_settings.store("CODE_SIGN_ENTITLEMENTS", "App/App.entitlements")
          end

          proj.recreate_user_schemes
          proj.save

        end

  lane :add_ui_background_modes do
  set_info_plist_value(
    path: 'App/Info.plist',
    key: "UIBackgroundModes",
    value: ["remote-notification"]
    )
  end

  lane :release do
    increment_version_number_in_xcodeproj(xcodeproj: "App.xcodeproj")
    increment_build_number(build_number: app_store_build_number + 1, xcodeproj: "App.xcodeproj")
    get_certificates           # invokes cert
    get_provisioning_profile   # invokes sigh
    build_app(workspace: "App.xcworkspace", scheme: "App")
    upload_to_app_store
  end

end

